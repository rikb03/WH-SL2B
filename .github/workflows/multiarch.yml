name: CI - .NET
on:
  workflow_dispatch:
  push:
    branches: [ test ]
  pull_request:
    types: [opened, reopened]
    branches: [ test ]

jobs:
  build:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     platform: 
    #       - linux/arm64 
          # - linux/amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: all

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        # platforms: ${{ matrix.platform }}
        install: true
        use: true

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        # platforms: ${{ matrix.platform }}
        platforms: linux/amd64,linux/arm64
        build-args: |
          APP_VERSION=1.0.1
        tags: |
          ljmagalaes/dierentuingroup12:latest

  security_scan:
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      -
        name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      -
        name: Install OWASP Dependency-Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v9.2.0/dependency-check-9.2.0-release.zip
          unzip dependency-check-9.2.0-release.zip

      -
        name: Run OWASP Dependency-Check
        run: |
          ./dependency-check/bin/dependency-check.sh --project "DIerentuin_DEVOPS" --scan ./ --out . --format "ALL" --nvdApiKey ${{ secrets.NVD_API_KEY }}

      -
        name: Archive vulnerability report
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: dependency-check-report.html
          
  deploy:
    name: Deploy
    needs: [ build, security_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1

      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG_CONTENTS }}

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v1
        with:
          namespace: group12
          manifests: |
            .kube/deployment.yaml
            .kube/ingress.yaml
            .kube/service.yaml
          images: |
            ljmagalaes/dierentuingroup12:latest

  post_deployment_verification:
    runs-on: ubuntu-latest
    needs: [ security_scan, deploy, build ]

    steps:
      -
        name: Perform smoke tests
        run: |
          curl https://your-app-url.com/healthcheck
      -
        name: Monitor application logs and metrics
        run: |
          cat path/to/your/log/file.txt > build_logs.txt
          grep -i "error" build_logs.txt

          echo "Uploading build logs..."
          actions/upload-artifact@v3  
            with:
              name: build-logs  # Artifact name for downloaded logs
              path: build_logs.txt